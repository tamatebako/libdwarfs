# Copyright (c) 2023-2024 [Ribose Inc](https://www.ribose.com).
# All rights reserved.
# This file is a part of tamatebako
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

env:
  CIRRUS_CLONE_SUBMODULES: true

build_and_test_task_template: &BUILD_AND_TEST_TASK_TEMPLATE
  configure_script: |
    cmake -B build -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DWITH_TESTS=ON

  build_script: |
    cmake --build build --config $BUILD_TYPE --parallel 4

  test_script: |
    ctest --test-dir build --output-on-failure

  clone_shunit_script: |
    git clone --depth 1 https://github.com/kward/shunit2.git tests/shunit2

  additional_tests_script: |
    $GNU_BASH tests/scripts/tests.sh

task:
  name: macos-arm64
  only_if: $CIRRUS_BRANCH == 'main' || $CIRRUS_PR != '' || $CIRRUS_TAG != ''
  macos_instance:
    image: ghcr.io/cirruslabs/macos-monterey-base:latest

  pre_install_script: |
    cat common.env >> $CIRRUS_ENV
    cat macos-arm64.env >> $CIRRUS_ENV
    echo "GNU_BASH=$(brew --prefix)/bin/bash" >> $CIRRUS_ENV

  install_script: |
    brew update
    brew install \
      bison flex gnu-sed bash boost double-conversion jemalloc fmt glog pkg-config \
      libevent libsodium lz4 xz zlib openssl@3

  deps_cache:
    folder: $DEPS
    reupload_on_changes: true
    fingerprint_script:
      - echo $CIRRUS_OS
      - cat common.env
      - cat macos-arm64.env

  << : *BUILD_AND_TEST_TASK_TEMPLATE

task:
  name: ubuntu-aarch64
  only_if: $CIRRUS_BRANCH == 'main' || $CIRRUS_PR != '' || $CIRRUS_TAG != ''
  arm_container:
    image: ubuntu:20.04
    cpu: 3
    memory: 12G

  pre_install_script: |
    cat common.env >> $CIRRUS_ENV
    cat ubuntu.env >> $CIRRUS_ENV
    echo GNU_BASH=bash >> $CIRRUS_ENV
    echo DEBIAN_FRONTEND=noninteractive >> $CIRRUS_ENV
    echo CMAKE_VERSION=3.26.5 >> $CIRRUS_ENV
    echo  LC_ALL=C >> $CIRRUS_ENV
    echo CC=gcc-10 >> $CIRRUS_ENV
    echo CXX=g++-10 >> $CIRRUS_ENV

  install_script: |
    apt-get -y update
    apt-get -y install sudo git curl build-essential pkg-config bison flex autoconf \
      binutils-dev libevent-dev acl-dev libfmt-dev libjemalloc-dev libiberty-dev    \
      libdouble-conversion-dev liblz4-dev liblzma-dev libssl-dev libunwind-dev      \
      libboost-context-dev libboost-filesystem-dev libboost-program-options-dev     \
      libboost-regex-dev libboost-system-dev libboost-thread-dev libdwarf-dev       \
      libelf-dev libgoogle-glog-dev libbrotli-dev libutfcpp-dev libboost-iostreams-dev \
      gcc-10 g++-10

  setup-cmake_script: |
    mkdir -p cmake-install
    pushd cmake-install
    curl -L -o cmake.sh \
    https://github.com/Kitware/CMake/releases/download/v"$CMAKE_VERSION"/cmake-"$CMAKE_VERSION"-linux-aarch64.sh
    sudo sh cmake.sh --skip-license --prefix="/usr/local"
    popd

  deps_cache:
    folder: $DEPS
    reupload_on_changes: true
    fingerprint_script:
      - echo $CIRRUS_OS
      - cat common.env
      - cat ubuntu.env

  << : *BUILD_AND_TEST_TASK_TEMPLATE
