# Copyright (c) 2021-2022 [Ribose Inc](https://www.ribose.com).
# All rights reserved.
# This file is a part of tamatebako
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

name: Ubuntu

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - '**.adoc'
      - '**.md'
      - '.github/workflows/alpine.yml'
      - '.github/workflows/macos.yml'
      - '.github/workflows/macos-arm64.yml'
      - 'cmake/def_darwin_env.cmake'
      - '.github/workflows/lint.yml'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**.adoc'
      - '**.md'
      - '.github/workflows/alpine.yml'
      - '.github/workflows/macos.yml'
      - '.github/workflows/macos-arm64.yml'
      - 'cmake/def_darwin_env.cmake'
      - '.github/workflows/lint.yml'
  workflow_dispatch:

env:
# The folder for dwarfs and other dependenies
  DEPS: deps
  CACHE_VER: "10"
# GitHub dependencies'
  INCBIN_TAG: "348e36b"
  DWARFS_TAG: "tebako-v0.2.1"
# Misc
  DEBIAN_FRONTEND: "noninteractive"
  TZ: "Etc/UTC"
  MAKEFLAGS: -j4

concurrency:
  group: '${{ github.workflow }}-${{ github.job }}-${{ github.head_ref || github.ref_name }}'
  cancel-in-progress: true

jobs:
  build:
    name: ${{ matrix.os }} [CC ${{ matrix.env.CC }}, ASAN ${{ matrix.env.ASAN }}, ${{ matrix.env.LOG_LEVEL }} ]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-20.04 ]
        env:
          - CC: gcc
            CXX: g++
            ASAN: 'OFF'
            LOG_LEVEL: 'trace'
          - CC: clang
            CXX: clang++
            ASAN: 'OFF'
            LOG_LEVEL: 'warn'
          - CC: clang
            CXX: clang++
            ASAN: 'ON'
            LOG_LEVEL: 'warn'
    env: ${{ matrix.env }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Create deps folder
        run: |
          mkdir ${{github.workspace}}/${{env.DEPS}}
          echo "Keys" > key.txt
          echo ${{ env.DWARFS_TAG }} >> key.txt
          echo ${{ env.INCBIN_TAG }} >> key.txt

      - name: Process cache
        uses: actions/cache@v3
        with:
          path: ${{github.workspace}}/${{env.DEPS}}
          key:  ${{ matrix.os }}-${{ matrix.env.CC }}-${{ hashFiles('key.txt') }}-v${{ env.CACHE_VER }}

# https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-README.md
# https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu1804-README.md
# Already installed: bison flex pkg-config

# gcc/g++ 9 is also there otherwise we would need:
# sudo add-apt-repository ppa:ubuntu-toolchain-r/test
# sudo apt update
# sudo apt install gcc-9 g++-9

      - name: Switch to gcc-9
        if: ${{ matrix.env.CC == 'gcc' }}
        run: |
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100 --slave /usr/bin/g++ g++ /usr/bin/g++-9 --slave /usr/bin/gcov gcov /usr/bin/gcov-9
          sudo update-alternatives --set gcc /usr/bin/gcc-9

      - name: Install packages
        run: |
          sudo apt-get -y update
          sudo apt-get -y install \
          binutils-dev libevent-dev acl-dev libfmt-dev libjemalloc-dev \
          libdouble-conversion-dev libiberty-dev liblz4-dev libssl-dev liblzma-dev \
          libunwind-dev libdwarf-dev libelf-dev libgoogle-glog-dev \
          libboost-context-dev libboost-filesystem-dev libboost-program-options-dev \
          libboost-regex-dev libboost-system-dev libboost-thread-dev

      - name: Configure
        run: cmake -B ${{ github.workspace }} -DWITH_TESTS=ON -DWITH_ASAN=${{ env.ASAN }} -DTESTS_LOG_LEVEL=${{ env.LOG_LEVEL }}

      - name: Build
        run: cmake --build ${{github.workspace}}

      - name: Run unit tests
        run: make test

      - name: Checkout shell test framework
        uses: actions/checkout@v3
        with:
          repository: kward/shunit2
          path: ${{github.workspace}}/tests/shunit2
          fetch-depth: 1

      - name: Run additional tests
        run:  ${{github.workspace}}/tests/scripts/tests.sh
