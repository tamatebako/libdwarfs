name: Ubuntu build

on:
  push:
    branches: [ master ]
    paths-ignore:
      - 'docs/**'
      - '**.adoc'
      - '**.md'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - 'docs/**'
      - '**.adoc'
      - '**.md'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
# Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
# The folder for dwarfs and other dependenies
  DEPS: deps
# GitHub dependencies' 
  INCBIN_TAG: "348e36b"
  DWARFS_TAG: "78fd324"

jobs:
  Ubuntu-build:
    name: ${{ matrix.os }} [CC ${{ matrix.env.CC }}]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        env:
          - CC: gcc
            CXX: g++
          - CC: clang
            CXX: clang++
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    env: ${{ matrix.env }}

    steps:
    - uses: actions/checkout@v2

    - name: Create deps folder
      run: |
        mkdir ${{github.workspace}}/${{env.DEPS}}
      
    - name: Process cache
      uses: actions/cache@v2
      with:
        path: ${{github.workspace}}/${{env.DEPS}}
        key: ${{ github.workflow }}-${{ env.CC }}-${{ env.DWARFS_TAG }}-${{ env.INCBIN_TAG }}

    - name: Install packages Ubuntu
# Already installed: bison flex pkg-config
      run: |
        sudo apt-get update
        sudo apt-get install \
        ronn binutils-dev libarchive-dev libevent-dev libjemalloc-dev acl-dev libxml2-dev \
        libdouble-conversion-dev libiberty-dev liblz4-dev liblzma-dev libssl-dev \
        libboost-context-dev libboost-filesystem-dev libboost-program-options-dev \
        libboost-regex-dev libboost-system-dev libboost-thread-dev libfuse3-dev \
        libunwind-dev libdwarf-dev libelf-dev libfmt-dev libgoogle-glog-dev libgtest-dev
        
    - name: Configure 
      run: cmake -B ${{github.workspace}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} 

    - name: Build
      run: cmake --build ${{github.workspace}} --config ${{env.BUILD_TYPE}}

    - name: Unit tests
      run: make test

    - name: Check "C" interface bindings in statically linked program, check that tmp directory is cleaned upon shutdown
      run: |
        mkdir ${{github.workspace}}/t_dir
        ls /tmp >> ${{github.workspace}}/t_dir/before
        ./wr-bin
        ls /tmp >> ${{github.workspace}}/t_dir/after
        diff ${{github.workspace}}/t_dir/before ${{github.workspace}}/t_dir/after

    - name: Run ldd to check that wr-bin has been linked statically 
      run:  ldd wr-bin 2>&1 >/dev/null | grep -i 'not a dynamic executable'

    - name: Install and verify installation folders
      run: |
        sudo cmake --install ${{github.workspace}} --prefix ${{github.workspace}}/install
        test -f ${{github.workspace}}/install/bin/dwarfs || (echo "File ${{github.workspace}}/install/bin/dwarfs does not exist" && false)
        test -f ${{github.workspace}}/install/bin/dwarfsck || (echo "File ${{github.workspace}}/install/bin/dwarfsck does not exist" && false)
        test -f ${{github.workspace}}/install/bin/dwarfsextract || (echo "File ${{github.workspace}}/install/bin/dwarfsextract does not exist" && false)
        test -f ${{github.workspace}}/install/bin/mkdwarfs || (echo "File ${{github.workspace}}/install/bin/mkdwarfs does not exist" && false)
        test -f ${{github.workspace}}/install/lib/libdwarfs-wr.a || (echo "File ${{github.workspace}}/install/lib/libdwarfs-wr.a does not exist" && false)
        test -f ${{github.workspace}}/install/lib/libdwarfs.a || (echo "File ${{github.workspace}}/install/lib/libdwarfs.a does not exist" && false)
        test -f ${{github.workspace}}/install/lib/libfsst.a || (echo "File ${{github.workspace}}/install/lib/libfsst.a does not exist" && false)
        test -f ${{github.workspace}}/install/lib/libfolly.a || (echo "File ${{github.workspace}}/install/lib/libfolly.a does not exist" && false)
        test -f ${{github.workspace}}/install/lib/libmetadata_thrift.a || (echo "File ${{github.workspace}}/install/lib/libmetadata_thrift.a does not exist" && false)
        test -f ${{github.workspace}}/install/lib/libthrift_light.a || (echo "File ${{github.workspace}}/install/lib/libthrift_light.a does not exist" && false)
        test -f ${{github.workspace}}/install/lib/libxxhash.a || (echo "File ${{github.workspace}}/install/lib/libxxhash.a does not exist" && false)
        test -f ${{github.workspace}}/install/lib/libzstd.a || (echo "File ${{github.workspace}}/install/lib/libzstd.a does not exist" && false)
        test -f ${{github.workspace}}/install/lib/libarchive.a || (echo "File ${{github.workspace}}/install/lib/libarchive.a does not exist" && false)
        test -f ${{github.workspace}}/install/include/tebako/tebako-defines.h || (echo "File ${{github.workspace}}/install/include/tebako/tebako-defines.h does not exist" && false)
        test -f ${{github.workspace}}/install/include/tebako/tebako-io.h || (echo "File ${{github.workspace}}/install/include/tebako/tebako-io.h does not exist" && false)

