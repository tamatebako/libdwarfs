name: Ubuntu build

on:
  push:
    branches: [ master, issue-39 ]
    paths-ignore:
      - 'docs/**'
      - '**.adoc'
      - '**.md'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - 'docs/**'
      - '**.adoc'
      - '**.md'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
# Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug
# The folder for dwarfs and other dependenies
  DEPS: deps
# GitHub dependencies' 
  INCBIN_TAG: 348e36b
  DWARFS_TAG: 78401c3

jobs:
  Ubuntu-build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    steps:
    - uses: actions/checkout@v2

    - name: Create deps folder and cache key
      run: |
        mkdir ${{github.workspace}}/${{env.DEPS}}
        echo "Keys" > key.txt
        echo  ${{ env.INCBIN_TAG }} >> key.txt
        echo  ${{ env.DWARFS_TAG }} >> key.txt
      
    - name: Process cache
      uses: actions/cache@v2
      with:
        path: ${{github.workspace}}/${{env.DEPS}}
        key: ${{ github.workflow }}-${{ hashFiles('key.txt') }}-v1

    - name: Install packages Ubuntu
# Already installed: bison flex pkg-config
      run: |
        sudo apt-get update
        sudo apt-get install \
        ronn binutils-dev libarchive-dev libevent-dev libjemalloc-dev acl-dev libxml2-dev \
        libdouble-conversion-dev libiberty-dev liblz4-dev liblzma-dev libssl-dev \
        libboost-context-dev libboost-filesystem-dev libboost-program-options-dev \
        libboost-regex-dev libboost-system-dev libboost-thread-dev libfuse3-dev \
        libunwind-dev libdwarf-dev libelf-dev libfmt-dev libgoogle-glog-dev libgtest-dev
        
    - name: Configure 
      run: cmake -B ${{github.workspace}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} 

    - name: Build
      run: cmake --build ${{github.workspace}} --config ${{env.BUILD_TYPE}}

    - name: Unit tests
      run: make test

    - name: Check "C" interface bindings in statically linked program, check that tmp directory is cleaned upon shutdown
      run: |
        mkdir ${{github.workspace}}/t_dir
        ls /tmp >> ${{github.workspace}}/t_dir/before
        ls -l /tmp
        ./wr-bin
        ls /tmp >> ${{github.workspace}}/t_dir/after
        ls -l /tmp
        diff ${{github.workspace}}/t_dir/before ${{github.workspace}}/t_dir/after

    - name: Run ldd to check that wr-bin has been linked statically 
      run:  ldd wr-bin 2>&1 >/dev/null | grep -i 'not a dynamic executable'

    - name: Install and verify installation folders
      run: |
        sudo cmake --install ${{github.workspace}} --prefix ${{github.workspace}}/install
        test ${{github.workspace}}/install/bin/dwarfs
        test ${{github.workspace}}/install/bin/dwarfsbench
        test ${{github.workspace}}/install/bin/dwarfsck
        test ${{github.workspace}}/install/bin/dwarfsextract
        test ${{github.workspace}}/install/bin/mkdwarfs
        test ${{github.workspace}}/install/lib/libdwarfs-wr.a
        test ${{github.workspace}}/install/lib/libdwarfs.a
        test ${{github.workspace}}/install/lib/libfsst.a
        test ${{github.workspace}}/install/lib/libfolly.a
        test ${{github.workspace}}/install/lib/libmetadata_thrift.a
        test ${{github.workspace}}/install/lib/libthrift_light.a
        test ${{github.workspace}}/install/lib/libxxhash.a
        test ${{github.workspace}}/install/lib/libzstd.a
        test ${{github.workspace}}/install/lib/libarchive.a
        test ${{github.workspace}}/install/lib/libdwarfs-wr.a
        test ${{github.workspace}}/install/include/tebako/tebako-defines.h
        test ${{github.workspace}}/install/include/include/tebako/tebako-io.h

